name: MFWPH Resource Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout MFWPH repository
        uses: actions/checkout@v4
        with:
          repository: TanyaShue/MFWPH
          path: MFWPH

      - name: Checkout target resource repository
        uses: actions/checkout@v4
        with:
          path: target-resource

      - name: Create assets/resource directory
        run: |
          mkdir -p target-resource/MFWPH/assets/resource

      - name: Copy resources to MFWPH repository
        run: |
          cp -r target-resource/* target-resource/MFWPH/assets/resource/

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        working-directory: MFWPH
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Copy DLL files to Python root
        working-directory: MFWPH
        shell: pwsh
        run: |
          if (Test-Path -Path "${{ github.workspace }}/MFWPH/DLL") {
            $dllFiles = Get-ChildItem -Path "${{ github.workspace }}/MFWPH/DLL" -File
            foreach ($file in $dllFiles) {
              Copy-Item -Path $file.FullName -Destination "${{ env.pythonLocation }}/$($file.Name)" -Force
              Write-Host "Copied $($file.Name) to ${{ env.pythonLocation }}"
            }
          } else {
            Write-Host "DLL folder not found."
          }

      - name: Run build script
        working-directory: MFWPH
        id: build
        run: |
          python build.py
          $zipFile = Get-ChildItem -Path "./dist" -Filter "MAA_YYS_*.zip" | Select-Object -First 1
          if ($zipFile) {
            Copy-Item -Path $zipFile.FullName -Destination "./dist/MAA_YYS_RELEASE.zip" -Force
            Write-Host "Copied $($zipFile.Name) to MAA_YYS_RELEASE.zip"
            echo "ORIGINAL_ZIP_NAME=$($zipFile.Name)" >> $env:GITHUB_ENV
          } else {
            Write-Host "::error::Build failed - zip file was not created"
            exit 1
          }
          Write-Host "Zip file successfully created"

      - name: List files in dist directory
        working-directory: MFWPH
        run: |
          Write-Host "Contents of dist directory:"
          Get-ChildItem -Path ./dist -Recurse | Select-Object FullName
          Write-Host "Zip file details:"
          Get-Item -Path ./dist/MAA_YYS_RELEASE.zip | Select-Object FullName, Length, LastWriteTime

      - name: Create GitHub Release
        id: create_release
        if: startsWith(github.ref, 'refs/tags/')
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          artifacts: ${{ github.workspace }}/MFWPH/dist/MAA_YYS_RELEASE.zip
          artifactContentType: application/zip
          artifactErrorsFailBuild: true